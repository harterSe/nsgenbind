/* test binding to generate htmldocument */

webidlfile "eventtarget.idl";
webidlfile "node.idl";
webidlfile "document.idl";
webidlfile "htmldocument.idl";

hdrcomment "Part of NetSurf Project";
hdrcomment "multi" 
           "line" 
           "comment";

hdrcomment "IDL http://www.whatwg.org/specs/web-apps/current-work/#the-document-object";

preamble [[[

#include <dom/dom.h>

#include "utils/config.h"
#include "utils/log.h"

#include "javascript/jsapi.h"

static JSBool JSAPI_NATIVE(write, JSContext *cx, uintN argc, jsval *vp)
{
	JSString* u16_txt;
	char *txt;
	unsigned long length;
	struct jsclass_document_priv *document;

	document = JS_GetInstancePrivate(cx, JS_THIS_OBJECT(cx,vp), &JSCLASS_OBJECT, NULL);
	if (document == NULL) {
		return JS_FALSE;
	}

	if (!JS_ConvertArguments(cx, argc, JSAPI_ARGV(cx, vp), "S", &u16_txt)) {
		return JS_FALSE;
	}

	JSString_to_char(u16_txt, txt, length);

	LOG(("content %p parser %p writing %s",
	     document->htmlc, document->htmlc->parser, txt));
	if (document->htmlc->parser != NULL) {
		dom_hubbub_parser_insert_chunk(document->htmlc->parser, (uint8_t *)txt, length);
	}
	JSAPI_SET_RVAL(cx, vp, JSVAL_VOID);

        foo[23] = bar[n +[x]];

	return JS_TRUE;
}

]]];

binding document {
	type js_libdom {
                node dom_document; 
	        
        }; /* the binding type and any instance specific extra data */

        extra "struct html_content *htmlc"; /* extra parameters to constructor 
                                             * value stored in private context 
                                             * structure. 
                                             */

	interface Document; /* Web IDL interface to generate */
};